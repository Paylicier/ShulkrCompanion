plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

group = 'fr.paylicier'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url = "https://jitpack.io/" }
}

dependencies {
    compileOnly("org.spigotmc:spigot-api:1.21.1-R0.1-SNAPSHOT")

    def lamp_version = "3.2.1"

    // Required for all platforms
    implementation("com.github.Revxrsal.Lamp:common:${lamp_version}")

    // The Bukkit API for Lamp
    implementation("com.github.Revxrsal.Lamp:bukkit:${lamp_version}")

    // The adventure API. It may be required at compile-time
    compileOnly("net.kyori:adventure-platform-bukkit:4.3.2")
}

compileJava {
    options.compilerArgs += ["-parameters"]
}

def targetJavaVersion = 14
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    destinationDirectory.set(file("./builds/"))
    archiveFileName = "Shulkr.jar"
}
